name: Gradle Package

on:
  push:
    branches:
      - main
      - develop
      - ci/cd

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      # 1. Checkout the code
      - uses: actions/checkout@v4

      # 2. Get the last commit message and escape special characters
      - name: Get last commit message
        id: commit_msg
        run: |
          COMMIT_MSG=$(git log -1 --pretty=%B)
          echo "COMMIT_MSG=$(echo "$COMMIT_MSG" | sed 's/#/%23/g' | tr -d '\n')" >> $GITHUB_ENV

      # 3. Extract all hash tags from commit message
      - name: Extract all hash tags
        id: extract_hash_tags
        run: |
          HASH_TAGS=$(echo "${{ env.COMMIT_MSG }}" | grep -oE '%23[a-zA-Z0-9_-]+' | sed 's/%23/#/g' | tr '\n' ' ')
          if [ -z "$HASH_TAGS" ]; then
            echo "HASH_TAGS=default" >> $GITHUB_ENV
          else
            echo "HASH_TAGS=$HASH_TAGS" >> $GITHUB_ENV
          fi
        shell: bash

      # 4. Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # 5. Setup Gradle
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582

      # 6. Build with Gradle
      - name: Build with Gradle
        run: ./gradlew build -x test

      # 7. Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker images for each hash tag
        run: |
          for tag in "${{ env.HASH_TAGS }}"; do
            CLEAN_TAG=$(echo "$tag" | sed 's/#//g' | xargs)  # '#'을 제거하고 공백 제거
            DOCKERFILE_DIR="./$CLEAN_TAG"
            
            cd "$DOCKERFILE_DIR"
            echo "Current directory is: $(pwd)"
          
            ls -la  # 현재 디렉토리의 파일 및 폴더 출력
            
            # CLEAN_TAG를 소문자로 변환 (빌드 직전에 적용)
            LOWERCASE_TAG=$(echo "$CLEAN_TAG" | tr '[:upper:]' '[:lower:]')
            docker build -f Dockerfile -t ${{ secrets.DOCKERHUB_USERNAME }}/$LOWERCASE_TAG:${{ github.sha }} .
          
            echo "Docker image built successfully."
            docker push ${{ secrets.DOCKERHUB_USERNAME }}/$LOWERCASE_TAG:${{ github.sha }}
              
            echo "Docker image pushed successfully."
            cd -
          done


